# Paradoja del cumplea√±os
# original (mismo dia)
NREP=10000
x=2:30
r2 = c()
for (N in x){
r = c()
for (i in 1:NREP){
s=sample(1:365,N,replace=TRUE)
r = cbind(r,  length(unique(s)) != length(s))
}
r2 = cbind(r2,mean(r))
}
# original (con mitad de dias)
r4 = c()
for (N in x){
r = c()
for (i in 1:NREP){
s=sample(1:182,N,replace=TRUE)
r = cbind(r,  length(unique(s)) != length(s))
}
r4 = cbind(r4,mean(r))
}
# Bis (dias consecutivos)
r3 = c()
for (N in x){
r = c()
for (i in 1:NREP){
s=sample(1:365,N,replace=TRUE)
s=sort(s)
r = cbind(r,  is.element(1, diff(s)) | is.element(0, diff(s)))
}
r3 = cbind(r3,mean(r))
}
plot(r2[1,])
plot(r3[1,])
df=data.frame(x,orig=t(r2),bis=t(r3),orig_182Dias=r4)
require(reshape2)
df <- melt(df,  id.vars = 'x', variable.name = 'series')
library(ggplot2)
ggplot(df, aes(x,value)) + geom_line(aes(colour = series))
df=data.frame(x,orig=t(r2),bis=t(r3),orig_182Dias=t(r4)
require(reshape2)
df <- melt(df,  id.vars = 'x', variable.name = 'series')
library(ggplot2)
ggplot(df, aes(x,value)) + geom_line(aes(colour = series))
df=data.frame(x,orig=t(r2),bis=t(r3),orig_182Dias=t(r4))
df <- melt(df,  id.vars = 'x', variable.name = 'series')
ggplot(df, aes(x,value)) + geom_line(aes(colour = series))
r3 = c()
for (N in x){
r = c()
for (i in 1:NREP){
s=sample(1:365,N,replace=TRUE)
s=sort(s)
r = cbind(r,  is.element(1, diff(s))))
}
r3 = cbind(r3,mean(r))
}
plot(r2[1,])
plot(r3[1,])
df=data.frame(x,orig=t(r2),bis=t(r3),orig_182Dias=t(r4))
require(reshape2)
df <- melt(df,  id.vars = 'x', variable.name = 'series')
library(ggplot2)
ggplot(df, aes(x,value)) + geom_line(aes(colour = series))
# Bis (dias consecutivos)
r3 = c()
for (N in x){
r = c()
for (i in 1:NREP){
s=sample(1:365,N,replace=TRUE)
s=sort(s)
r = cbind(r,  is.element(1, diff(s)))
}
r3 = cbind(r3,mean(r))
}
plot(r2[1,])
plot(r3[1,])
df=data.frame(x,orig=t(r2),bis=t(r3),orig_182Dias=t(r4))
require(reshape2)
df <- melt(df,  id.vars = 'x', variable.name = 'series')
library(ggplot2)
ggplot(df, aes(x,value)) + geom_line(aes(colour = series))
devtools::install_github("electorArg/polAr")
install.packages('devtools')
devtools::install_github("electorArg/polAr")
library(ggplot2)
setwd("/data/brunobian/Documents/Repos/Repos_Analisis/polisemia/LLM/")
df=read.csv2("distancias.csv",sep=",")
df[,"baseS1"] <- as.numeric(as.character(df[,"X2"]))
df[,"SignS1"] <- as.numeric(as.character(df[,"X3"]))
df[,"baseS2"] <- as.numeric(as.character(df[,"X5"]))
df[,"SignS2"] <- as.numeric(as.character(df[,"X6"]))
ggplot(df) +
geom_point(aes(x=baseS1,y=SignS1), col="#00CDCD")+
geom_point(aes(x=baseS2,y=SignS2), col= "#00CDCD")+
geom_abline(linetype="longdash") +
xlab("Sesgo Base") +
ylab("Sesgo Generado")
df["diff_base1_emb"] <- (df["SignS1"] - df["baseS1"]) / abs(df["baseS1"])
df["diff_base2_emb"] <- (df["SignS2"] - df["baseS2"]) / abs(df["baseS2"])
df2 <- read.csv2("../comportamental/accuracies.csv",sep=",")
df2 <- df2[,c("indTarget","diff_base1","diff_base2")]
df2[,"diff_base1"] <- as.numeric(as.character(df2[,"diff_base1"]))
df2[,"diff_base2"] <- as.numeric(as.character(df2[,"diff_base2"]))
df <- merge(df,df2,by.x="X0",by.y="indTarget")
ggplot(df) +
geom_point(aes(x=diff_base1,y=diff_base1_emb), col="#00CDCD")+
geom_point(aes(x=diff_base2,y=diff_base2_emb), col= "#00CDCD")+
geom_abline(linetype="longdash") +
geom_vline(xintercept = 0)+
geom_hline(yintercept = 0)+
xlab("Sesgo humano (%)") +
ylab("Sesgo embedding (%)") +
xlim(c(-0.1,0.5))+
ylim(c(-1,2))
library(ggplot2)
setwd("/data/brunobian/Documents/Repos/Repos_Analisis/polisemia/LLM/")
df=read.csv2("distancias.csv",sep=",")
df[,"baseS1"] <- as.numeric(as.character(df[,"X2"]))
df[,"SignS1"] <- as.numeric(as.character(df[,"X3"]))
df[,"baseS2"] <- as.numeric(as.character(df[,"X5"]))
df[,"SignS2"] <- as.numeric(as.character(df[,"X6"]))
ggplot(df) +
geom_point(aes(x=baseS1,y=SignS1), col="#00CDCD")+
geom_point(aes(x=baseS2,y=SignS2), col= "#00CDCD")+
geom_abline(linetype="longdash") +
xlab("Sesgo Base") +
ylab("Sesgo Generado")
df["diff_base1_emb"] <- (df["SignS1"] - df["baseS1"]) / abs(df["baseS1"])
df["diff_base2_emb"] <- (df["SignS2"] - df["baseS2"]) / abs(df["baseS2"])
df2 <- read.csv2("../comportamental/accuracies.csv",sep=",")
df2 <- df2[,c("indTarget","diff_base1","diff_base2")]
df2[,"diff_base1"] <- as.numeric(as.character(df2[,"diff_base1"]))
df2[,"diff_base2"] <- as.numeric(as.character(df2[,"diff_base2"]))
df <- merge(df,df2,by.x="X0",by.y="indTarget")
ggplot(df) +
geom_point(aes(x=diff_base1,y=diff_base1_emb), col="#00CDCD")+
geom_point(aes(x=diff_base2,y=diff_base2_emb), col= "#00CDCD")+
geom_abline(linetype="longdash") +
geom_vline(xintercept = 0)+
geom_hline(yintercept = 0)+
xlab("Sesgo humano (%)") +
ylab("Sesgo embedding (%)") +
xlim(c(-0.1,0.5))+
ylim(c(-1,2))
library(ggplot2)
setwd("/data/brunobian/Documents/Repos/Repos_Analisis/polisemia/LLM/")
df=read.csv2("distancias.csv",sep=",")
df[,"baseS1"] <- as.numeric(as.character(df[,"X2"]))
df[,"SignS1"] <- as.numeric(as.character(df[,"X3"]))
df[,"baseS2"] <- as.numeric(as.character(df[,"X5"]))
df[,"SignS2"] <- as.numeric(as.character(df[,"X6"]))
ggplot(df) +
geom_point(aes(x=baseS1,y=SignS1), col="#00CDCD")+
geom_point(aes(x=baseS2,y=SignS2), col= "#00CDCD")+
geom_abline(linetype="longdash") +
xlab("Sesgo Base") +
ylab("Sesgo Generado")
df["diff_base1_emb"] <- (df["SignS1"] - df["baseS1"]) / abs(df["baseS1"])
df["diff_base2_emb"] <- (df["SignS2"] - df["baseS2"]) / abs(df["baseS2"])
df2 <- read.csv2("../comportamental/accuracies.csv",sep=",")
df2 <- df2[,c("indTarget","diff_base1","diff_base2")]
df2[,"diff_base1"] <- as.numeric(as.character(df2[,"diff_base1"]))
df2[,"diff_base2"] <- as.numeric(as.character(df2[,"diff_base2"]))
df <- merge(df,df2,by.x="X0",by.y="indTarget")
ggplot(df) +
geom_point(aes(x=diff_base1,y=diff_base1_emb), col="#00CDCD")+
geom_point(aes(x=diff_base2,y=diff_base2_emb), col= "#00CDCD")+
geom_abline(linetype="longdash") +
geom_vline(xintercept = 0)+
geom_hline(yintercept = 0)+
xlab("Sesgo humano (%)") +
ylab("Sesgo embedding (%)") +
xlim(c(-0.1,0.5))+
ylim(c(-1,2))
library(ggplot2)
setwd("/data/brunobian/Documents/Repos/Repos_Analisis/polisemia/LLM/")
df=read.csv2("distancias.csv",sep=",")
df[,"baseS1"] <- as.numeric(as.character(df[,"X2"]))
df[,"SignS1"] <- as.numeric(as.character(df[,"X3"]))
df[,"baseS2"] <- as.numeric(as.character(df[,"X5"]))
df[,"SignS2"] <- as.numeric(as.character(df[,"X6"]))
ggplot(df) +
geom_point(aes(x=baseS1,y=SignS1), col="#00CDCD")+
geom_point(aes(x=baseS2,y=SignS2), col= "#00CDCD")+
geom_abline(linetype="longdash") +
xlab("Sesgo Base") +
ylab("Sesgo Generado")
df["diff_base1_emb"] <- (df["SignS1"] - df["baseS1"]) / abs(df["baseS1"])
df["diff_base2_emb"] <- (df["SignS2"] - df["baseS2"]) / abs(df["baseS2"])
df2 <- read.csv2("../comportamental/accuracies.csv",sep=",")
df2 <- df2[,c("indTarget","diff_base1","diff_base2")]
df2[,"diff_base1"] <- as.numeric(as.character(df2[,"diff_base1"]))
df2[,"diff_base2"] <- as.numeric(as.character(df2[,"diff_base2"]))
df <- merge(df,df2,by.x="X0",by.y="indTarget")
ggplot(df) +
geom_point(aes(x=diff_base1,y=diff_base1_emb), col="#00CDCD")+
geom_point(aes(x=diff_base2,y=diff_base2_emb), col= "#00CDCD")+
geom_abline(linetype="longdash") +
geom_vline(xintercept = 0)+
geom_hline(yintercept = 0)+
xlab("Sesgo humano (%)") +
ylab("Sesgo embedding (%)") +
xlim(c(-0.1,0.5))+
ylim(c(-1,2))
library(ggplot2)
setwd("/data/brunobian/Documents/Repos/Repos_Analisis/polisemia/LLM/")
df=read.csv2("distancias.csv",sep=",")
df[,"baseS1"] <- as.numeric(as.character(df[,"X2"]))
df[,"SignS1"] <- as.numeric(as.character(df[,"X3"]))
df[,"baseS2"] <- as.numeric(as.character(df[,"X5"]))
df[,"SignS2"] <- as.numeric(as.character(df[,"X6"]))
ggplot(df) +
geom_point(aes(x=baseS1,y=SignS1), col="#00CDCD")+
geom_point(aes(x=baseS2,y=SignS2), col= "#00CDCD")+
geom_abline(linetype="longdash") +
xlab("Sesgo Base") +
ylab("Sesgo Generado")
df["diff_base1_emb"] <- (df["SignS1"] - df["baseS1"]) / abs(df["baseS1"])
df["diff_base2_emb"] <- (df["SignS2"] - df["baseS2"]) / abs(df["baseS2"])
df2 <- read.csv2("../comportamental/accuracies.csv",sep=",")
df2 <- df2[,c("indTarget","diff_base1","diff_base2")]
df2[,"diff_base1"] <- as.numeric(as.character(df2[,"diff_base1"]))
df2[,"diff_base2"] <- as.numeric(as.character(df2[,"diff_base2"]))
df <- merge(df,df2,by.x="X0",by.y="indTarget")
ggplot(df) +
geom_point(aes(x=diff_base1,y=diff_base1_emb), col="#00CDCD")+
geom_point(aes(x=diff_base2,y=diff_base2_emb), col= "#00CDCD")+
geom_abline(linetype="longdash") +
geom_vline(xintercept = 0)+
geom_hline(yintercept = 0)+
xlab("Sesgo humano (%)") +
ylab("Sesgo embedding (%)") +
xlim(c(-0.1,0.5))+
ylim(c(-1,2))
library(ggplot2)
setwd("/data/brunobian/Documents/Repos/Repos_Analisis/polisemia/LLM/")
df=read.csv2("distancias.csv",sep=",")
df[,"baseS1"] <- as.numeric(as.character(df[,"X2"]))
df[,"SignS1"] <- as.numeric(as.character(df[,"X3"]))
df[,"baseS2"] <- as.numeric(as.character(df[,"X5"]))
df[,"SignS2"] <- as.numeric(as.character(df[,"X6"]))
ggplot(df) +
geom_point(aes(x=baseS1,y=SignS1), col="#00CDCD")+
geom_point(aes(x=baseS2,y=SignS2), col= "#00CDCD")+
geom_abline(linetype="longdash") +
xlab("Sesgo Base") +
ylab("Sesgo Generado")
df["diff_base1_emb"] <- (df["SignS1"] - df["baseS1"]) / abs(df["baseS1"])
df["diff_base2_emb"] <- (df["SignS2"] - df["baseS2"]) / abs(df["baseS2"])
df2 <- read.csv2("../comportamental/accuracies.csv",sep=",")
df2 <- df2[,c("indTarget","diff_base1","diff_base2")]
df2[,"diff_base1"] <- as.numeric(as.character(df2[,"diff_base1"]))
df2[,"diff_base2"] <- as.numeric(as.character(df2[,"diff_base2"]))
df <- merge(df,df2,by.x="X0",by.y="indTarget")
ggplot(df) +
geom_point(aes(x=diff_base1,y=diff_base1_emb), col="#00CDCD")+
geom_point(aes(x=diff_base2,y=diff_base2_emb), col= "#00CDCD")+
geom_abline(linetype="longdash") +
geom_vline(xintercept = 0)+
geom_hline(yintercept = 0)+
xlab("Sesgo humano (%)") +
ylab("Sesgo embedding (%)") +
xlim(c(-0.1,0.5))+
ylim(c(-1,2))
